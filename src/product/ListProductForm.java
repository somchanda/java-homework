/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package product;

import CustomClass.Function;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import login.ConnectionDB;
import CustomClass.Item;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Somchanda
 */
public class ListProductForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListProductForm
     */
    public ListProductForm() {
        this.setClosable(true);
        BasicInternalFrameUI basicInternalFrameUI = (BasicInternalFrameUI) this.getUI();
        for (MouseListener listener : basicInternalFrameUI.getNorthPane().getMouseListeners()) {
            basicInternalFrameUI.getNorthPane().removeMouseListener(listener);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puDeleteImage = new javax.swing.JPopupMenu();
        itDeleteImage = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        pTable = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtProductName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSellPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jdcExpireDate = new com.toedter.calendar.JDateChooser();
        txtSearch = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        btnClose1 = new javax.swing.JButton();
        txtImagePath = new javax.swing.JTextField();

        itDeleteImage.setText("Remove");
        itDeleteImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itDeleteImageActionPerformed(evt);
            }
        });
        puDeleteImage.add(itDeleteImage);

        setBorder(null);
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        pTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Barcode", "Unit Price", "Sell Price", "Qty", "Category Name", "Photo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pTable.setFocusable(false);
        pTable.setRowHeight(20);
        pTable.setRowMargin(2);
        pTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pTable);

        btnSave.setFont(new java.awt.Font("Oswald", 0, 24)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button/Save-icon.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSave.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSave.setMargin(new java.awt.Insets(2, 14, 2, 20));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Oswald", 0, 24)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button/Edit.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUpdate.setMargin(new java.awt.Insets(2, 14, 2, 20));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Oswald", 0, 24)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button/Delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDelete.setMargin(new java.awt.Insets(2, 14, 2, 20));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Oswald", 0, 24)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button/Close.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnClose.setMargin(new java.awt.Insets(2, 14, 2, 20));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        txtProductName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtProductName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductNameFocusLost(evt);
            }
        });
        txtProductName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductNameKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Product Name: ");

        txtBarcode.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtBarcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarcodeFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Barcode");

        txtUnitPrice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Unit Price");

        txtSellPrice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Sell Price");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Category Name");

        cmbCategory.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Qty");

        txtQty.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Expire Date");

        jdcExpireDate.setDateFormatString("yyyy-MM-dd");
        jdcExpireDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Search by");

        lblImage.setToolTipText("");
        lblImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblImage.setComponentPopupMenu(puDeleteImage);

        btnClose1.setFont(new java.awt.Font("Oswald", 0, 24)); // NOI18N
        btnClose1.setText("Browse");
        btnClose1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnClose1.setMargin(new java.awt.Insets(2, 14, 2, 20));
        btnClose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClose1ActionPerformed(evt);
            }
        });

        txtImagePath.setEditable(false);
        txtImagePath.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addGap(9, 9, 9))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(480, 480, 480)
                        .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcExpireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(170, 170, 170)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClose1)
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addGap(108, 108, 108)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addComponent(jdcExpireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    InputStream in;
    private int proID = 0;
    List<Item> category;
    byte[] byteArray = null;
    String imgPath;
    
    public void populateJtable(){
       Product pro = new Product();
        ArrayList<Product> pList = pro.productList();
        String[] colNames = {"ID", "Product Name", "Barcode", "Unit Price", "Sell Price", "Qty", "Category Name", "Photo"};
        Object [][] rows = new Object[pList.size()][8];
        for(int i=0; i<pList.size(); i++){
            rows[i][0] = pList.get(i).getId();
            rows[i][1] = pList.get(i).getProductName();
            rows[i][2] = pList.get(i).getBarcode();
            rows[i][3] = pList.get(i).getUnitPrice();
            rows[i][4] = pList.get(i).getUnitInStock();
            rows[i][5] = pList.get(i).getSellPrice();
            rows[i][6] = pList.get(i).getCateogoryName();
            ImageIcon photo = new ImageIcon(new ImageIcon(pList.get(i).getPhoto()).getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
            rows[i][7] = photo;
        }
        CustomTableModel model = new CustomTableModel(colNames, rows);
        pTable.setModel(model);
        pTable.setRowHeight(100);
        pTable.setShowGrid(true);
        JTableHeader th = pTable.getTableHeader();
        th.setFont(new Font("Times New Roman", Font.BOLD, 16));
        
    }

    private void pTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pTableMouseClicked
        int row = pTable.getSelectedRow();
        proID = Integer.valueOf(pTable.getValueAt(row, 0).toString());
        txtProductName.setText(pTable.getValueAt(row, 1).toString());
        txtBarcode.setText(pTable.getValueAt(row, 2).toString());
        txtUnitPrice.setText(pTable.getValueAt(row, 3).toString());
        txtSellPrice.setText(pTable.getValueAt(row, 4).toString());
        txtQty.setText(pTable.getValueAt(row, 5).toString());
        for (Item cat : category) {
            if (cat.getName().equals(pTable.getValueAt(row, 6).toString())) {
                cmbCategory.setSelectedItem(cat);
            }
        }
        Image img = ((ImageIcon)pTable.getValueAt(row, 7)).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_DEFAULT);
        ImageIcon icon = new ImageIcon(img);
        lblImage.setIcon(icon);
        
        
//            if (pTable.getValueAt(row, 7) == null) {
//                Function.setImage(lblImage, "icon/noimage.jpg");
//            } else {
//                byteArray = (byte[]) pTable.getValueAt(row, 7);
//                ByteArrayInputStream bais = new ByteArrayInputStream(byteArray);
//                BufferedImage bImg;
//                bImg = ImageIO.read(bais);
//                Function.setImage(lblImage, bImg);
//                bais.close();
//            }
    }//GEN-LAST:event_pTableMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
//        JTextField []txt = {txtPname,txtBarcode,txtQty, txtSellPrice, txtUnitPrice};
//        String []name= {"Product name","Barcode","Qty","Sell price","Unit price"};
//        if(c.validateTextBox(txt, name)){
//            Object []row = {txtPname.getText(), txtBarcode.getText(), txtQty.getText(), txtSellPrice.getText(), txtUnitPrice.getText()};
//            DefaultTableModel model = (DefaultTableModel)pTable.getModel();
//            model.addRow(row);
//            c.clearTextBox(txt);
//        }
        Product pro = new Product();
        try {
            if (Function.checkTextBoxEmpty(txtProductName, txtBarcode, txtUnitPrice, txtSellPrice, txtQty) == 0) {
                JOptionPane.showMessageDialog(null, "Please fill all fields!", "Required field", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (ConnectionDB.isDuplicate("tblproduct", "productName", txtProductName, "Product name is already taken")) {
                return;
            }
            if (ConnectionDB.isDuplicate("tblproduct", "barcode", txtBarcode, "This barcode is aready taken")) {
                return;
            }
            pro.setId(ConnectionDB.automaticID("tblproduct", "productID"));
            pro.setProductName(txtProductName.getText().trim());
            pro.setBarcode(Integer.valueOf(txtBarcode.getText().trim()));
            pro.setUnitPrice(Double.valueOf(txtUnitPrice.getText().trim()));
            pro.setSellPrice(Double.valueOf(txtSellPrice.getText().trim()));
            pro.setCategoryID(((Item) cmbCategory.getSelectedItem()).getId());
            byte [] img = null;
            Path pth = Paths.get(imgPath);
            img = Files.readAllBytes(pth);
            pro.setPhoto(img);
            pro.setUnitInStock(Integer.valueOf(txtQty.getText().trim()));
            if (pro.save() != 0) {
                JOptionPane.showMessageDialog(null, "Product inserted", "successful", JOptionPane.INFORMATION_MESSAGE);
                Function.clearText(txtProductName, txtBarcode, txtUnitPrice, txtSellPrice, txtQty, txtImagePath);
                Function.clearImage(lblImage);
                ConnectionDB.addDataToTable(pTable, "viewProduct");
            } else {
                JOptionPane.showMessageDialog(null, "Cannot insert!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Cannot insert!", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ListProductForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ListProductForm.class.getName()).log(Level.SEVERE, null, ex);
        }
//        pro.setPhoto((FileInputStream) in);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (Function.checkTextBoxEmpty(txtProductName, txtBarcode, txtUnitPrice, txtSellPrice, txtQty) == 0) {
            JOptionPane.showMessageDialog(null, "Please fill all fields!", "Required field", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (ConnectionDB.isDuplicateExcept("tblproduct", "productName", txtProductName, proID, "productID", "Product name is already taken")) {
            return;
        }
        if (ConnectionDB.isDuplicateExcept("tblproduct", "barcode", txtBarcode, proID, "productID", "Barcode is already taken")) {
            return;
        }
        Product pro = new Product();
        pro.setId(proID);
        pro.setProductName(txtProductName.getText().trim());
        pro.setBarcode(Integer.parseInt(txtBarcode.getText()));
        pro.setCategoryID(((Item)cmbCategory.getSelectedItem()).getId());
        pro.setUnitPrice(Double.parseDouble(txtUnitPrice.getText()));
        pro.setSellPrice(Double.parseDouble(txtSellPrice.getText()));
        if(byteArray == null){
            in = null;
        }else{
            in = new ByteArrayInputStream(byteArray);
        }
//        pro.setPhoto(in);
        pro.setUnitInStock(Integer.parseInt(txtQty.getText()));
        if(pro.update() != 0){
            JOptionPane.showMessageDialog(null, "Product updated!", "Update succeed", JOptionPane.INFORMATION_MESSAGE);
            ConnectionDB.addDataToTable(pTable, "viewProduct");
        }else{
            JOptionPane.showMessageDialog(null, "Product not update!", "Update fail", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        category = ConnectionDB.addDataToCombo(cmbCategory, "tblcategory", "categoryID", "CategoryName");
        populateJtable();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnClose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClose1ActionPerformed
        String pathImage = null;
        JFileChooser choose = new JFileChooser(FileSystemView.getFileSystemView().getFileSystemView().getHomeDirectory());
        choose.setDialogTitle("Select an image");
        choose.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, gif and jpg", "png", "gif", "jpg");
        choose.setFileFilter(filter);
        int click = choose.showOpenDialog(null);
        if(click == JFileChooser.APPROVE_OPTION){
            File files = choose.getSelectedFile();
            pathImage = files.getPath();
            imgPath = pathImage;
            lblImage.setIcon(Function.setImage(pathImage, null, lblImage.getWidth(), lblImage.getHeight()));
        }
    }//GEN-LAST:event_btnClose1ActionPerformed

    private void txtProductNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameKeyReleased

    private void txtProductNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductNameFocusLost

    }//GEN-LAST:event_txtProductNameFocusLost

    private void itDeleteImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itDeleteImageActionPerformed
        Function.clearImage(lblImage);
        imgPath = null;
    }//GEN-LAST:event_itDeleteImageActionPerformed

    private void txtBarcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarcodeFocusLost

    }//GEN-LAST:event_txtBarcodeFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnClose1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JMenuItem itDeleteImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcExpireDate;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable pTable;
    private javax.swing.JPopupMenu puDeleteImage;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtImagePath;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSellPrice;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
}
